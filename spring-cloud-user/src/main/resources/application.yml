server:
  port: 9000

spring:
  application:
    name: mc-user
  servlet:
    multipart:
      max-file-size: 120MB
      max-request-size: 20MB

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    registry-fetch-interval-seconds: 10
    # 是否从eureka中获取信息 注意！！！
    fetch-registry: true
#  instance:
    # 自定义元数据
#    metadata-map:
#      zone: ABC
#      test: BBC
#    lease-renewal-interval-in-seconds: 5
#    prefer-ip-address: true
#    appname: service-user
#    hostname: localhost
#    status-page-url-path: /health
#    namespace: eureka
    # 此实例注册到eureka服务端的唯一的实例ID,其组成为${spring.application.name}:${spring.application.instance_id}:${random.value}
#    instance-id: ${spring.application.name}:${server.port}
    # 获取实例的ip地址
#    ip-address: 127.0.0.1

# 配置负载均衡的规则
#mc-order:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#    # 脱离eureka使用
#    listOfService: http://localhost:9001,http://localhost:9002
#    # 请求连接的超时时间。
#    ConnectTimeout: 1000
#    # 请求处理的超时时间
#    ReadTimeout: 1000
#    # 对所以操作请求都进行重试
#    OkToRetryOnAllOperations: true

# 整合 consul 配置
#spring:
#  cloud:
#    consul:
#      enabled: true
#      host: localhost
#      port: 8500
#  discovery:
#    # 配置服务注册到Consul上
#    register: true # 是否开启在 consul 中注册服务
#    health-check-path: /actuator/health   #定义 consul 健康检查路径
#    health-check-interval: 10s # consul 健康检查频率
#    instance-id: ${spring.application.name}:${server.port} # 配置注册到consul 服务的id
#    enabled: true #启用 consul 服务发现
#    service-name: ${spring.application.name} #设置 注册到 consul 的服务名称
#    ip-address: localhost # 访问服务时使用的 ip地址 （还必须设置preferIpAddress才能使用）
#    prefer-ip-address: true